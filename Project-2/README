Задание на проект 2

Задача 1. Да се реализира complete binary tree чрез верижно представяне.

Задача 2. Да се реализира complete binary tree като кореново дърво.

Задача 3. Да се реализира complete binary tree чрез списък на бащите.

Задача 4. Да се реализира complete binary tree чрез логика различна от тези в предишните задачи.

*Забележка: всички реализации да са шаблонни.

Всички следващи задачи да се реализират за всяка една от имплементациите изброени в задачи 1-4.

Задача 5. Да се реализира функцията filltree(vector<T> leaves), която генерира дърво, чиито листа са елементите във вектора leaves. Елементите да се разпределят по листата на случаен принцип(възможно най-случаен!).

Задача 6. Във файла participants.txt ще намерите списък с имената на участници в турнир,  последвани от коефициент(цяло число). Колкото по-голям е коефициента, толкова по-добър е въпросния участник. Ще трябва да четете от този файл. Да се реализира функция, която взима произволен брой, произволни участници от .txt файла и връща вектор с всички избрани такива.

Задача 7. Да се реализира методът tournament(), който да разиграва турнир между вече добавените в листата на съответното дърво участници, ако няма добавени листа да се извежда съобщение за грешка. Целта е след необходимия брой итерации в корена на дървото да се “появи” победителя в турнира.

*Забележка: Победителя от конкретна двойка се определя спрямо коефициентите на участниците в нея по следния начин:
Ако имаме следните участници: Участник1 25, Участник2 12. 
Очевидно Участник1 е по-добър(има по-голям коефициент), но не винаги печели по-добрия. 
За тази цел трябва да симулирате следното действие:
- В урна се добавят по едно ЧЕРНО топче за всяка единица в коефициента на първия играч(25- 25 топчета). 
Аналогично за втория участник се добавят съответния брой БЕЛИ топчета. На произволен принцип(възможно най-случаен), от урната се тегли топче и в зависимост от цвета му се определя победителя(така дори участник с коефициент 1 има шанс срещу участник с коефициент 1000000).

Задача 8. Да се реализира методът findpath(string name), която принтира на екрана последователно всички срещи, в които е участвал участника с име name. При некоректно име или непопълнено дърво да се извежда съобщение за грешка.

Задача 9. ВСИЧКИ ФУНКЦИИ ЗАЕДНО: За всяка реализация следната последователност от команди трябва да работи:
    1) Извикване на функцията от Задача 6 и записване на резултата от нея.
    2) Получения резултат се подава на функцията filltree
    3) За вече попълненото с листа дърво се извиква метода tournament()
    4) На екрана да се изпишат всички битки по кръгове и победителя
    5) Извикване на функцията findpath за име на участник въведено от потребителя.
